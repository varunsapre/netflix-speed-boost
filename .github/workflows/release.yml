name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Set repository root
        id: repo_root
        run: echo "ROOT=$(pwd)" >> $GITHUB_OUTPUT
      
      - name: Verify repository structure
        run: |
          REPO_ROOT="${{ steps.repo_root.outputs.ROOT }}"
          echo "Repository root: $REPO_ROOT"
          echo "Current directory: $(pwd)"
          echo "Repository contents:"
          ls -la
          echo "Checking for key files:"
          ls -la manifest.json content.js popup.html popup.js
          echo "Checking workflow scripts directory:"
          ls -la .github/workflows/scripts/
      
      - name: Extract changelog for this version
        id: changelog
        run: |
          REPO_ROOT="${{ steps.repo_root.outputs.ROOT }}"
          VERSION="${GITHUB_REF#refs/tags/v}"
          
          # Extract the changelog section for this version
          CHANGELOG_FILE="$REPO_ROOT/docs/CHANGELOG.md"
          
          # Check if changelog file exists
          if [ ! -f "$CHANGELOG_FILE" ]; then
            echo "Changelog file not found at $CHANGELOG_FILE"
            CHANGELOG_CONTENT="See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/docs/CHANGELOG.md) for details."
          else
            echo "Found changelog file at $CHANGELOG_FILE"
            # Find the section for this version and extract until the next version or end
            CHANGELOG_CONTENT=$(awk "/## \[$VERSION\]/{flag=1; next} /## \[/{flag=0} flag" "$CHANGELOG_FILE")
            
            # If changelog is empty, use a default message
            if [ -z "$CHANGELOG_CONTENT" ]; then
              CHANGELOG_CONTENT="See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/docs/CHANGELOG.md) for details."
            fi
          fi
          
          # Save to output (handle multiline)
          echo "CONTENT<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG_CONTENT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Install ImageMagick
        run: |
          echo "üì¶ Installing ImageMagick for icon generation..."
          sudo apt-get update
          sudo apt-get install -y imagemagick
          echo "‚úÖ ImageMagick installed successfully"
      
      - name: Generate Icons
        run: |
          REPO_ROOT="${{ steps.repo_root.outputs.ROOT }}"
          echo "üé® Generating Chrome extension icons..."
          echo "Repository root: $REPO_ROOT"
          
          # Check if logo exists
          LOGO_FILE="$REPO_ROOT/assets/logo.png"
          if [ ! -f "$LOGO_FILE" ]; then
            echo "‚ö†Ô∏è Warning: Logo not found at $LOGO_FILE"
            echo "Skipping icon generation..."
          else
            echo "‚úÖ Logo found, generating icons..."
            
            # Make script executable and run from repository root
            chmod +x "$REPO_ROOT/.github/workflows/scripts/generate-icons.sh"
            "$REPO_ROOT/.github/workflows/scripts/generate-icons.sh"
            echo "‚úÖ Icons generated successfully"
          fi
      
      - name: Build Chrome package
        run: |
          REPO_ROOT="${{ steps.repo_root.outputs.ROOT }}"
          echo "üì¶ Building Chrome extension package..."
          echo "Repository root: $REPO_ROOT"
          
          # Make script executable and run from repository root
          chmod +x "$REPO_ROOT/.github/workflows/scripts/generate-chrome-pkg.sh"
          "$REPO_ROOT/.github/workflows/scripts/generate-chrome-pkg.sh"
          
          echo "Package created in: $REPO_ROOT"
          ls -la "$REPO_ROOT"/*.zip
          
      - name: Verify package creation
        run: |
          REPO_ROOT="${{ steps.repo_root.outputs.ROOT }}"
          PACKAGE_NAME="netflix-speed-boost-v${{ steps.get_version.outputs.VERSION }}.zip"
          PACKAGE_PATH="$REPO_ROOT/$PACKAGE_NAME"
          
          # Check if package exists
          if [ ! -f "$PACKAGE_PATH" ]; then
            echo "Package file not found: $PACKAGE_PATH"
            echo "Available files:"
            ls -la "$REPO_ROOT"/*.zip
            exit 1
          fi
          
          echo "Package found: $PACKAGE_PATH"
          echo "Package size: $(du -h "$PACKAGE_PATH" | cut -f1)"
          
          # Verify package contents
          echo "Package contents:"
          unzip -l "$PACKAGE_PATH" | head -20
          
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Netflix Speed Boost v${{ steps.get_version.outputs.VERSION }}
          body: |
            ## üöÄ Netflix Speed Boost v${{ steps.get_version.outputs.VERSION }}
            
            Skip the boring slow parts! üé¨
            
            ${{ steps.changelog.outputs.CONTENT }}
            
            ---
            
            ### üì¶ Installation
            
            #### Option 1: Chrome Web Store (Recommended)
            *Coming soon*
            
            #### Option 2: Manual Installation
            1. Download the `netflix-speed-boost-v${{ steps.get_version.outputs.VERSION }}.zip` file below
            2. Extract the ZIP file
            3. Open Chrome and go to `chrome://extensions/`
            4. Enable "Developer mode" in the top right
            5. Click "Load unpacked"
            6. Select the extracted folder
            
            ---
            
            ### üéØ Key Features
            - Hold on the right side of video OR press custom key to speed boost
            - Customizable speeds from 1.25√ó to 5√ó
            - Beautiful wave animations
            - Works in fullscreen
            - Privacy-first (no tracking, no data collection)
            
            ---
            
            **Full Changelog**: https://github.com/${{ github.repository }}/blob/main/docs/CHANGELOG.md
          draft: false
          prerelease: false
          files: |
            ${{ steps.repo_root.outputs.ROOT }}/netflix-speed-boost-v${{ steps.get_version.outputs.VERSION }}.zip
